Day4. 

insert (데이터 삽입)
데이터 베이스 테이블에 새로운 행을 추가할 때 사용한다.

insert into 테이블이름 ( 열이름1, 열이름2,......)
values (값1,값2,,,,,,)

insert into 테이블이름 : 데이터를 삽입할 테이블을 지정
( 열이름1, 열이름2,......) : 삽입 할 데이터의 열 이름
(값1,값2,,,,,,) : 각 열에 대응하는 값을 제공

insert into students(StudentID, firstname, lastname, age, major, enrollmentDate)
values( 1, 'Grace' ,  'mi' , 20,' computer', '2022-12-01'),
( 1, 'Grace' ,  'mi' , 20,' computer', '2022-12-01'),
( 1, 'Grace' ,  'mi' , 20,' computer', '2022-12-01') ;//다중 삽입

다중 열 검색
select 열이름1, 열이름2 ,, from 테이블이름;

특정 열의 값이 주어진 값과 일치하는 행을 조회
select * from 테이블이름 where 열이름 = '찾고자하는 데이터';
------------------------------------------------------------------
where 조건식 
데이터를 조회하거나, 삭제, 수정 작업을 할 때 원하는 데이터만
골라서 처리할 수 있게끔 조건을 설정

비교연산자
= : 같다 , != :  다르다
> : 크다 , >= : 크거나 같다
< : 작다, <= : 작거나 같다


논리 연산자ㅣ
AND -> 조건식1 AND 조건식2 -> 양쪽 모두 조건이 참일경우  true
OR - > 조건식1 OR 조건식2 -> 둘 중의 조건 중 하나가 참이면 true
NOT -> NOT 조건식 => 조건식 true> false / false> true (!)
(청개구리)

비교 연산자 결과는 true와 false로 나타낸다.
--------------------------------------------------------------
age가 24보다 크거나같다 6
age 22랑 같다 2,7
major 가 computerscience와 같지 않다.2,3,4,5,6

범위 조건 ( 특정 날짜 조회)
select * from 테이블이름 where 검색할 열 between 날짜  and  날짜

연령 범위 조회
19 22
1,2,3,5,7

select * from students where ( age >= 18 or major = 'mathematics') and
    -> enrollmentdate > '2023-01-01';
age가 18살 이상이거나 major가 '수학'이며, 동시에
입학일이 2023년 1월 1일 이후인 학생

(전공이 physics 이거나(or) 학생아이디가 5 이하)인 학생 중에서
and 나이가 22세 이상인 학생 조회

2,4


문자열 비교
select * from 테이블이름 where firstname like 'jane' = > firstname컬럼에 있는 데이터 jane과 일치하는
데이터만 조회

컬럼  like '검색하고 싶은 문자'

firstname like 'j%' = > j로 시작하는 데이터만 조회

firstname like '%e' => e로 끝나는 데이터만 조회

firstname like '%j%' = >  데이터가 j를 포함하는 데이터만 조회

firstname> ? 조회 ?
e로 끝나는 학생 조회  2,3,5,7
select * from students where firstname like '%e';

firstname>
'john' 과 일치하는 데이터 조회 1 
select * from students where firstname like 'john';

lastname>
's'를 포함하는 데이터 조회 2,3,4,6,7
select * from students where lastname like '%s%';


order by 절
데이터를 특정 열을 기준으로 정렬할 때 사용
기본적으로 오름차순(ASC) 으로 정렬되며 내림차순
(DESC)도 가능

select 컬럼 from 데이터 테이블 where 조건 order by 컬럼 DESC


major를 기준으로 오름차순, age를 기준으로 내림차순 정렬

lastname을 기준으로 오름차순 정렬, 
studentID를 기준으로 내림차순 정렬
5,7,1,3,6,2,4

데이터 삽입
insert문

데이터 수정
Update
--------------------------------------------------
update 테이블이름 set 열이름1=  값1, 열이름2 = 값2 ..... where  조건절

insert  데이터 삽입
select 데이터 검색
update 수정
delete 데이터 삭제

트랜잭션?
한꺼번에 수행되어야 할 일련의 연산 모음
=> 데이터베이스의 상태를 바꾸는 일정의 작업 단위
start transaction;
rollback;   => delete한 데이터 복구
commit;   => 데이터 확정 짓기 / rollback 불가능해짐




